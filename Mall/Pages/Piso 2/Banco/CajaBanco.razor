@page "/CajaBanco"

@using System.Text.RegularExpressions;
@inject NavigationManager Navigator

<div class="form-group d-flex justify-content-center">
    <h5>Caja</h5>
</div>

<div class="form-group d-flex justify-content-center">
    <img src="../Resources/caja.jpg" style="width:40%; height:350px" />
</div>

<div class="form-group">
    <textarea class="form-control" @bind="Dialogo" />
</div>

<div class="form-group">
    @if (Elejir == 1)
    {
        <button class="btn btn-primary" @onclick="Continuar">Continuar</button>
    }
    else if (Elejir == 2)
    {
        <button class="btn btn-primary" @onclick="Decision1">@Opcion1</button>
        <button class="btn btn-primary" @onclick="Decision2">@Opcion2</button>
        @if (Paso == 1)
        {
            <button class="btn btn-primary" @onclick="Decision3">@Opcion3</button>
        }
    }
    else if (Elejir == 3)
    {
        <input type="text" class="form-control" @bind-value="Texto" />
        <button class="btn btn-primary" @onclick="Validar">Validar</button>
    }
    else if (Elejir == 4)
    {
        @if (Paso == 3)
        {
            <select class="form-control">
                <option value="0" disabled selected> Seleccione una cuenta </option>
                @foreach (var cuenta in Cuentas)
                {
                    <option @onclick="@(a => AsignarCuenta(cuenta))">@cuenta.Numeracion</option>
                }
            </select>
        }
        else if (Paso == 5)
        {
            <select class="form-control">
                <option value="0" disabled selected> Seleccione una cuenta </option>
                @foreach (var cuenta in Cuentas)
                {
                    <option @onclick="@(a => RetirarCuenta(cuenta))">@cuenta.Numeracion - Saldo:$@cuenta.Saldo</option>
                }
            </select>
        }
        <button class="btn btn-primary" @onclick="Decision3">@Opcion3</button>
    }
</div>

@code {
    [CascadingParameter]
    public Jugadores Jugador { get; set; }

    public List<CuentasBancarias> Cuentas { get; set; }
    public CuentasBancarias AuxCuenta { get; set; }

    public int Paso { get; set; }

    public string Dialogo { get; set; }

    public int Elejir { get; set; }

    public string Opcion1 { get; set; }
    public string Opcion2 { get; set; }
    public string Opcion3 { get; set; }

    public string Texto { get; set; }
    public decimal Monto { get; set; }

    protected override void OnInitialized()
    {
        Cuentas = CuentasBancariasBLL.GetList(c => c.JugadorId == Jugador.JugadorId).ToList();
        Paso = 1;
        Dialogo = "Bienvenido, desea realizar un deposito o retirar?";
        Elejir = 1;
        Opcion1 = "Depositar";
        Opcion2 = "Retirar";
        Opcion3 = "Perdon no deseo hacer nada";
    }

    private void Continuar()
    {
        switch (Paso)
        {
            case 1://elejir entre: depositar,retirar,no hacer nada
                Elejir = 2;
                break;
            //depositar
            case 2://ingresar cantidad a depositar
                Elejir = 3;
                break;
            case 3://seleccionar cuenta bancaria
                Elejir = 4;
                break;
            case 4://deposito realizado y volver al lobby
                Navigator.NavigateTo("LobbyBanco");
                break;
            //retirtar
            case 5://elegir cuanta de donde se va a retirar
                Elejir = 4;
                break;
            case 6://ingresar cantidad a retirar
                Elejir = 3;
                break;
            case 7://retiro exitoso y volver al lobby
                Navigator.NavigateTo("LobbyBanco");
                break;
            //monto a depositar invalido
            case 8:
                Paso = 2;
                Elejir = 3;
                break;
            //monto retirar invalido
            case 9:
                Paso = 6;
                Elejir = 3;
                break;
        }
    }

    private void Validar()
    {
        switch (Paso)
        {
            //depositar
            case 2://ingresar cantidad a depositar
                try
                {
                    Monto = Convert.ToDecimal(Texto);

                    if (Monto <= Jugador.Dinero)
                    {//monto valido
                        Paso = 3;
                        Dialogo = "Seleccione su cuenta bancaria a la cual depositar el dinero.";
                        Elejir = 1;
                    }
                    else
                    {//monto invalido
                        Paso = 8;
                        Dialogo = "Monto invalido";
                        Elejir = 1;
                    }
                }
                catch (FormatException)
                {//monto invalido
                    Paso = 8;
                    Dialogo = "Monto invalido";
                    Elejir = 1;
                }
                break;
            //retirar
            case 6://ingresar cantidad a retirar
                try
                {
                    Monto = Convert.ToDecimal(Texto);

                    if (Monto <= AuxCuenta.Saldo)
                    {//retiro exitoso
                        AuxCuenta.Saldo -= Monto;
                        CuentasBancariasBLL.Modificar(AuxCuenta);
                        Jugador.Dinero += Monto;

                        Paso = 7;
                        Dialogo = "Su retiro ha sido realizado.";
                        Elejir = 1;
                    }
                    else
                    {//monto incorrecto
                        Paso = 9;
                        Dialogo = "Monto invalido";
                        Elejir = 1;
                    }
                }
                catch (FormatException)
                {//monto incorrecto
                    Paso = 9;
                    Dialogo = "Monto invalido";
                    Elejir = 1;
                }
                break;
        }
    }

    private void Decision1()
    {
        switch (Paso)
        {
            case 1://depositar una cantidad
                Dialogo = "Ok, cuanto desea depositar?";
                Elejir = 1;
                Paso = 2;
                break;
        }
    }

    private void Decision2()
    {
        switch (Paso)
        {
            case 1://seleccionar la cuenta a retirar
                Dialogo = "Ok, seleccione la cuenta de donde desea retirar.";
                Elejir = 1;
                Paso = 5;
                break;
        }
    }

    private void Decision3()
    {
        Navigator.NavigateTo("LobbyBanco");
    }

    private void AsignarCuenta(CuentasBancarias cuenta)
    {//seleccionar cuenta a depositar
        cuenta.Saldo += Monto;
        Jugador.Dinero -= Monto;

        CuentasBancariasBLL.Modificar(cuenta);

        //deposito realizado
        Paso = 4;
        Dialogo = "Su deposito ha sido realizado.";
        Elejir = 1;

        //try
        //{
        //    monto = Convert.ToDecimal(Texto);


        //}
        //catch (FormatException)
        //{
        //    Paso = 0;
        //    Dialogo = "";
        //    Elejir = 0;
        //}


    }

    private void RetirarCuenta(CuentasBancarias cuenta)
    {
        AuxCuenta = cuenta;
        //ingreser cantidad a retirar
        Paso = 6;
        Dialogo = "Muy bien, por favor ingrese la cantidad a retirar.";
        Elejir = 1;
    }
}
